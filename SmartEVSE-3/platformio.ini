; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
description = SmartEVSE v3,v4 (ESP32) and v4 (CH32)
src_dir = .
include_dir = ./src
default_envs = release

;release = v3, keeping this name to stay compatible with github workflow action scripts
[env:release]
platform = espressif32 @ 6.10.0
board = esp32dev
framework = arduino
monitor_port = /dev/ttyUSB0
monitor_speed = 115200
board_build.f_flash = 80000000L
board_build.flash_mode = dio
lib_ignore =
    WebSockets
monitor_filters = esp32_exception_decoder
board_build.partitions = partitions_custom.csv
extra_scripts = pre:packfs.py
lib_deps =
    miq19/eModbus@1.7.2
    bblanchon/ArduinoJson@^6.21.4
    https://github.com/matth-x/MicroOcpp#942fb88aa736a5f99d1a24c11fe657c49af2c7ea
    https://github.com/matth-x/MicroOcppMongoose
build_flags =
    -DENABLE_OCPP=1
    -DCORE_DEBUG_LEVEL=0
    -DLOG_LEVEL=0
    -DMG_ENABLE_PACKED_FS=1
    -DMG_TLS=MG_TLS_MBED
    -DMG_ARCH=MG_ARCH_ESP32
    -D MO_CUSTOM_WS
    -D MO_PARTITION_LABEL='"spiffs"' # Use partition "spiffs" for local data
    -D MO_TRAFFIC_OUT
    -D MO_MG_USE_VERSION=MO_MG_V717
    -D MO_ENABLE_CONNECTOR_LOCK=1
    -D MO_ENABLE_MBEDTLS=1
    -I ${PROJECT_INCLUDE_DIR} # Make mongoose.h visible for MO-Mongoose
    -Wall
    -Wextra
    -Wunused-variable
    -Wno-missing-field-initializers
    -DNDEBUG
    -DMG_ENABLE_LOG=0
; for debug messages on OCPP, change next two lines; messages appear on your serial port only!
    -D MO_DBG_LEVEL=0
;    -D MO_DBG_LEVEL=MO_DL_DEBUG
    -DSMARTEVSE_VERSION=30

[env:v4]
platform = espressif32 @ 6.10.0
board = esp32-s3-devkitc-1
framework = arduino
monitor_port = /dev/ttyUSB0
monitor_speed = 115200
board_build.f_flash = 80000000L
board_build.flash_mode = dio
lib_ignore =
    WebSockets
monitor_filters = esp32_exception_decoder
board_build.partitions = partitions_custom_v4.csv
extra_scripts =
    pre:make_ch32.py
    pre:packfs.py
lib_deps =
    miq19/eModbus@1.7.2
    bblanchon/ArduinoJson@^6.21.4
    https://github.com/matth-x/MicroOcpp#942fb88aa736a5f99d1a24c11fe657c49af2c7ea
    https://github.com/matth-x/MicroOcppMongoose#fb1292ed84fbab18c965a131f8704b61ced0f1b7
build_flags =
    -DENABLE_OCPP=1
    -DMODEM=1
    -DCORE_DEBUG_LEVEL=5
    -DLOG_LEVEL=5
    -DMG_ENABLE_PACKED_FS=1
    -DMG_TLS=MG_TLS_MBED
    -DMG_ARCH=MG_ARCH_ESP32
    -D MO_CUSTOM_WS
    -D MO_PARTITION_LABEL='"spiffs"' # Use partition "spiffs" for local data
    -D MO_TRAFFIC_OUT
    -D MO_MG_USE_VERSION=MO_MG_V715
    -D MO_ENABLE_CONNECTOR_LOCK=1
    -D MO_ENABLE_MBEDTLS=1
    -I ${PROJECT_INCLUDE_DIR} # Make mongoose.h visible for MO-Mongoose
    -Wall
    -Wextra
    -Wunused-variable
    -Wno-missing-field-initializers
    -DNDEBUG
    -DMG_ENABLE_LOG=0
    -D MO_DBG_LEVEL=0
    -DSMARTEVSE_VERSION=40
    -DARDUINO_USB_MODE=1
    -DARDUINO_USB_CDC_ON_BOOT=1
    -DBOARD_HAS_PSRAM

[env:ch32]
platform = https://github.com/Community-PIO-CH32V/platform-ch32v.git
build_src_filter =
    +<**/*.c>
    +<**/*.cpp>
    -<**/RemoteDebug.cpp>
    -<src/mongoose.c>
monitor_speed = 115200
build_flags =
    -flto
    -Ich32v003fun
    -I/usr/include/newlib
    -lgcc
    -Iextralibs
    -DCH32V20x
    -Wall
    -Wshadow
    -DLOG_LEVEL=5
    -DMODEM=1
extra_scripts =
    pre:gen_ldscript.py

upload_protocol = wch-link
board = genericCH32V203C8T6
